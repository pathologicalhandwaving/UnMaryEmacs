;;; delve-autoloads.el --- automatically extracted autoloads
;;
;;; Code:


;;;### (autoloads nil "delve" "delve.el" (0 0 0 0))
;;; Generated autoloads from delve.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve" '("delve")))

;;;***

;;;### (autoloads nil "delve-data-types" "delve-data-types.el" (0
;;;;;;  0 0 0))
;;; Generated autoloads from delve-data-types.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-data-types" '("delve-data-types--zettel--accessor-fn")))

;;;***

;;;### (autoloads nil "delve-edit" "delve-edit.el" (0 0 0 0))
;;; Generated autoloads from delve-edit.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-edit" '("delve-edit--")))

;;;***

;;;### (autoloads nil "delve-export" "delve-export.el" (0 0 0 0))
;;; Generated autoloads from delve-export.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-export" '("delve-export-")))

;;;***

;;;### (autoloads nil "delve-minor-mode" "delve-minor-mode.el" (0
;;;;;;  0 0 0))
;;; Generated autoloads from delve-minor-mode.el

(defvar delve-global-minor-mode nil "\
Non-nil if Delve-Global minor mode is enabled.
See the `delve-global-minor-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `delve-global-minor-mode'.")

(custom-autoload 'delve-global-minor-mode "delve-minor-mode" nil)

(autoload 'delve-global-minor-mode "delve-minor-mode" "\
Add some Delve functionality in org roam files.

If called interactively, enable Delve-Global minor mode if ARG is
positive, and disable it if ARG is zero or negative.  If called
from Lisp, also enable the mode if ARG is omitted or nil, and
toggle it if ARG is `toggle'; disable the mode otherwise.

\(fn &optional ARG)" t nil)

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-minor-mode" '("delve-")))

;;;***

;;;### (autoloads nil "delve-pp" "delve-pp.el" (0 0 0 0))
;;; Generated autoloads from delve-pp.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-pp" '("delve-pp-")))

;;;***

;;;### (autoloads nil "delve-query" "delve-query.el" (0 0 0 0))
;;; Generated autoloads from delve-query.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-query" '("delve-query")))

;;;***

;;;### (autoloads nil "delve-store" "delve-store.el" (0 0 0 0))
;;; Generated autoloads from delve-store.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-store" '("delve-store--")))

;;;***

;;;### (autoloads nil "delve-transient" "delve-transient.el" (0 0
;;;;;;  0 0))
;;; Generated autoloads from delve-transient.el

(if (fboundp 'register-definition-prefixes) (register-definition-prefixes "delve-transient" '("delve-transient-")))

;;;***

;;;### (autoloads nil nil ("delve-pkg.el") (0 0 0 0))

;;;***

(provide 'delve-autoloads)
;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; coding: utf-8
;; End:
;;; delve-autoloads.el ends here
